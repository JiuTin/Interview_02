//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/NB_FGT/Scripts/Input/GameInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInputAction : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInputAction"",
    ""maps"": [
        {
            ""name"": ""GameInput"",
            ""id"": ""110772db-37f1-42f5-97d9-472787ef5864"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""c8bc5737-a78d-4c3d-8e19-a7daabe0bb09"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraLook"",
                    ""type"": ""Value"",
                    ""id"": ""ad22e7ba-f198-46f2-a0e6-1a443bd96d57"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""0ee90e5f-1d33-412d-a04c-6a19cd1c40dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LAttack"",
                    ""type"": ""Button"",
                    ""id"": ""eadef29e-71fa-4e1a-a793-68a00b4f270b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RAttack"",
                    ""type"": ""Button"",
                    ""id"": ""97c56c0f-bce2-49a8-aea5-80d27dab361c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Climb"",
                    ""type"": ""Button"",
                    ""id"": ""9ee0764a-f074-41d7-a578-fb52e2dbf562"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grab"",
                    ""type"": ""Button"",
                    ""id"": ""b0211303-1cec-464d-9daa-b67689a703ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TakeOut"",
                    ""type"": ""Button"",
                    ""id"": ""13fa4b7a-d14c-42de-a7fb-dc0eb3073af5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Parry"",
                    ""type"": ""Button"",
                    ""id"": ""b56a4c73-db1a-45e2-ad06-04f3759436fb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Equip"",
                    ""type"": ""Button"",
                    ""id"": ""05971ffc-f98c-4760-83f8-28c17b6d94be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""f5f34a64-4f6a-48cc-a777-02db7ca53f5e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""932fe99f-d947-4dc3-bc1a-de525f5d2555"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8e8d2963-9462-404c-b600-dc06ccffb80f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4c003570-3aa7-4feb-8c2e-4feb72f6d5ad"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4295b901-1b54-4edd-8a30-fdcf14d0933b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3ddbb35d-57d2-4361-b461-88a919235303"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e23747b0-4daa-429e-9795-323bb1c38119"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.15,y=0.15)"",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d32792e9-1e52-42de-a650-94ac4fdef713"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7460f71-bdf5-4037-a1e2-438a78e2c427"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00a89502-a022-4d63-ad3c-7c0e5865056b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e09c6e0-aae3-4677-84c1-8f1016402c47"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Climb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""091e270d-3d9e-4673-bf97-46a9ab73132d"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""53f49222-8e15-4743-979c-6e3f8567674f"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TakeOut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aff0e6ac-87dd-491a-9a8d-79081d736fdf"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Parry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be5031bd-d3e5-409c-b422-8b03c3bf54f5"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Equip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9187d4a-0933-4738-b7ed-9f353f05b4ea"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GameInput
        m_GameInput = asset.FindActionMap("GameInput", throwIfNotFound: true);
        m_GameInput_Movement = m_GameInput.FindAction("Movement", throwIfNotFound: true);
        m_GameInput_CameraLook = m_GameInput.FindAction("CameraLook", throwIfNotFound: true);
        m_GameInput_Run = m_GameInput.FindAction("Run", throwIfNotFound: true);
        m_GameInput_LAttack = m_GameInput.FindAction("LAttack", throwIfNotFound: true);
        m_GameInput_RAttack = m_GameInput.FindAction("RAttack", throwIfNotFound: true);
        m_GameInput_Climb = m_GameInput.FindAction("Climb", throwIfNotFound: true);
        m_GameInput_Grab = m_GameInput.FindAction("Grab", throwIfNotFound: true);
        m_GameInput_TakeOut = m_GameInput.FindAction("TakeOut", throwIfNotFound: true);
        m_GameInput_Parry = m_GameInput.FindAction("Parry", throwIfNotFound: true);
        m_GameInput_Equip = m_GameInput.FindAction("Equip", throwIfNotFound: true);
        m_GameInput_Interaction = m_GameInput.FindAction("Interaction", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GameInput
    private readonly InputActionMap m_GameInput;
    private IGameInputActions m_GameInputActionsCallbackInterface;
    private readonly InputAction m_GameInput_Movement;
    private readonly InputAction m_GameInput_CameraLook;
    private readonly InputAction m_GameInput_Run;
    private readonly InputAction m_GameInput_LAttack;
    private readonly InputAction m_GameInput_RAttack;
    private readonly InputAction m_GameInput_Climb;
    private readonly InputAction m_GameInput_Grab;
    private readonly InputAction m_GameInput_TakeOut;
    private readonly InputAction m_GameInput_Parry;
    private readonly InputAction m_GameInput_Equip;
    private readonly InputAction m_GameInput_Interaction;
    public struct GameInputActions
    {
        private @GameInputAction m_Wrapper;
        public GameInputActions(@GameInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_GameInput_Movement;
        public InputAction @CameraLook => m_Wrapper.m_GameInput_CameraLook;
        public InputAction @Run => m_Wrapper.m_GameInput_Run;
        public InputAction @LAttack => m_Wrapper.m_GameInput_LAttack;
        public InputAction @RAttack => m_Wrapper.m_GameInput_RAttack;
        public InputAction @Climb => m_Wrapper.m_GameInput_Climb;
        public InputAction @Grab => m_Wrapper.m_GameInput_Grab;
        public InputAction @TakeOut => m_Wrapper.m_GameInput_TakeOut;
        public InputAction @Parry => m_Wrapper.m_GameInput_Parry;
        public InputAction @Equip => m_Wrapper.m_GameInput_Equip;
        public InputAction @Interaction => m_Wrapper.m_GameInput_Interaction;
        public InputActionMap Get() { return m_Wrapper.m_GameInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameInputActions set) { return set.Get(); }
        public void SetCallbacks(IGameInputActions instance)
        {
            if (m_Wrapper.m_GameInputActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnMovement;
                @CameraLook.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnCameraLook;
                @CameraLook.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnCameraLook;
                @CameraLook.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnCameraLook;
                @Run.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnRun;
                @LAttack.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnLAttack;
                @LAttack.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnLAttack;
                @LAttack.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnLAttack;
                @RAttack.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnRAttack;
                @RAttack.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnRAttack;
                @RAttack.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnRAttack;
                @Climb.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnClimb;
                @Climb.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnClimb;
                @Climb.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnClimb;
                @Grab.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnGrab;
                @Grab.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnGrab;
                @Grab.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnGrab;
                @TakeOut.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnTakeOut;
                @TakeOut.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnTakeOut;
                @TakeOut.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnTakeOut;
                @Parry.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnParry;
                @Parry.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnParry;
                @Parry.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnParry;
                @Equip.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnEquip;
                @Equip.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnEquip;
                @Equip.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnEquip;
                @Interaction.started -= m_Wrapper.m_GameInputActionsCallbackInterface.OnInteraction;
                @Interaction.performed -= m_Wrapper.m_GameInputActionsCallbackInterface.OnInteraction;
                @Interaction.canceled -= m_Wrapper.m_GameInputActionsCallbackInterface.OnInteraction;
            }
            m_Wrapper.m_GameInputActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @CameraLook.started += instance.OnCameraLook;
                @CameraLook.performed += instance.OnCameraLook;
                @CameraLook.canceled += instance.OnCameraLook;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
                @LAttack.started += instance.OnLAttack;
                @LAttack.performed += instance.OnLAttack;
                @LAttack.canceled += instance.OnLAttack;
                @RAttack.started += instance.OnRAttack;
                @RAttack.performed += instance.OnRAttack;
                @RAttack.canceled += instance.OnRAttack;
                @Climb.started += instance.OnClimb;
                @Climb.performed += instance.OnClimb;
                @Climb.canceled += instance.OnClimb;
                @Grab.started += instance.OnGrab;
                @Grab.performed += instance.OnGrab;
                @Grab.canceled += instance.OnGrab;
                @TakeOut.started += instance.OnTakeOut;
                @TakeOut.performed += instance.OnTakeOut;
                @TakeOut.canceled += instance.OnTakeOut;
                @Parry.started += instance.OnParry;
                @Parry.performed += instance.OnParry;
                @Parry.canceled += instance.OnParry;
                @Equip.started += instance.OnEquip;
                @Equip.performed += instance.OnEquip;
                @Equip.canceled += instance.OnEquip;
                @Interaction.started += instance.OnInteraction;
                @Interaction.performed += instance.OnInteraction;
                @Interaction.canceled += instance.OnInteraction;
            }
        }
    }
    public GameInputActions @GameInput => new GameInputActions(this);
    public interface IGameInputActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnCameraLook(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnLAttack(InputAction.CallbackContext context);
        void OnRAttack(InputAction.CallbackContext context);
        void OnClimb(InputAction.CallbackContext context);
        void OnGrab(InputAction.CallbackContext context);
        void OnTakeOut(InputAction.CallbackContext context);
        void OnParry(InputAction.CallbackContext context);
        void OnEquip(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
    }
}
